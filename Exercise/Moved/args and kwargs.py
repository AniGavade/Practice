# args

# /

# output- 
# 1
# (2, 3, 4, 5)
#======================================================================================

# a=lambda x:(x*x)/x
# print(a(8))
#=====================================================================================
# def my_func(x, y=7, *args, **kwargs):
#     print(y)

# my_func(2, 3, 4, 5, 6, a=7, b=8)
#=====================================================

# a = {1, 2, 3, 4, 5, 6}
# b = {0, 1, 2, 3} & a
# a = filter(lambda x: x > 1, b)
# print(len(list(a)))
#==============================================================

# def power(x, y):
#     if y == 0:
#         return 1
#     else:
#         return x*power(x, y-1)


# print(power(2, 3))
#===============================================================

# a = (lambda x: x*(x+1)) (6)
# print(a)
#==================================================================

# nums = [1, 2, 8, 3, 7]
# res = list(filter(lambda x: x%2 == 0, nums))
# print(res)
#===============================================================================

# def func(**kwargs):
#     print(kwargs["zero"])


# func(a = 0, zero = 8)
#=========================================================================
